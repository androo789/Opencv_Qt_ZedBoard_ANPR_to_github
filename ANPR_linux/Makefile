#############################################################################
# Makefile for building: ANPR_linux
# Generated by qmake (2.01a) (Qt 4.8.2) on: ?? 4? 10 12:32:54 2015
# Project:  ANPR_linux.pro
# Template: app
# Command: /opt/zedboard/qt/install/bin/qmake -o Makefile ANPR_linux.pro
#############################################################################

####### Compiler, tools and options

CC            = ${CROSS_COMPILE}gcc
CXX           = ${CROSS_COMPILE}g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = ${CROSS_COMPILE_CFLAGS} -I$(ZYNQ_QT_INSTALL)/include -DZYNQ -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = ${CROSS_COMPILE_CPPFLAGS} -I$(ZYNQ_QT_INSTALL)/include -DZYNQ -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I../../../qt/install/mkspecs/qws/linux-arm-gnueabi-g++ -I. -I../../../qt/install/include/QtCore -I../../../qt/install/include/QtNetwork -I../../../qt/install/include/QtGui -I../../../qt/install/include -I../../opencv-2.4.10/install/include -I../../opencv-2.4.10/install/include/opencv -I../../opencv-2.4.10/install/include/opencv2 -I. -I. -I.
LINK          = ${CROSS_COMPILE}g++
LFLAGS        = -L$(ZYNQ_QT_INSTALL)/lib -Wl,-O1 -Wl,-rpath,/opt/zedboard/qt/install/lib
LIBS          = $(SUBLIBS)  -L/opt/zedboard/qt/install/lib /opt/zedboard/opencv_zed/opencv-2.4.10/install/lib/libopencv_highgui.so /opt/zedboard/opencv_zed/opencv-2.4.10/install/lib/libopencv_core.so /opt/zedboard/opencv_zed/opencv-2.4.10/install/lib/libopencv_imgproc.so /opt/zedboard/opencv_zed/opencv-2.4.10/install/lib/*.so -lQtGui -L/opt/zedboard/qt/install/lib -lQtNetwork -lQtCore -lpthread 
AR            = ${CROSS_COMPILE}ar cqs
RANLIB        = 
QMAKE         = /opt/zedboard/qt/install/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = ${CROSS_COMPILE}strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = convert_mat_qimage.cpp \
		DetectRegions.cpp \
		main.cpp \
		mainwindow.cpp \
		OCR.cpp \
		Plate.cpp \
		videodevice.cpp moc_mainwindow.cpp \
		moc_videodevice.cpp
OBJECTS       = convert_mat_qimage.o \
		DetectRegions.o \
		main.o \
		mainwindow.o \
		OCR.o \
		Plate.o \
		videodevice.o \
		moc_mainwindow.o \
		moc_videodevice.o
DIST          = ../../../qt/install/mkspecs/common/gcc-base.conf \
		../../../qt/install/mkspecs/common/gcc-base-unix.conf \
		../../../qt/install/mkspecs/common/g++-base.conf \
		../../../qt/install/mkspecs/common/g++-unix.conf \
		../../../qt/install/mkspecs/common/unix.conf \
		../../../qt/install/mkspecs/common/linux.conf \
		../../../qt/install/mkspecs/common/qws.conf \
		../../../qt/install/mkspecs/qconfig.pri \
		../../../qt/install/mkspecs/features/qt_functions.prf \
		../../../qt/install/mkspecs/features/qt_config.prf \
		../../../qt/install/mkspecs/features/exclusive_builds.prf \
		../../../qt/install/mkspecs/features/default_pre.prf \
		../../../qt/install/mkspecs/features/release.prf \
		../../../qt/install/mkspecs/features/default_post.prf \
		../../../qt/install/mkspecs/features/warn_on.prf \
		../../../qt/install/mkspecs/features/qt.prf \
		../../../qt/install/mkspecs/features/unix/thread.prf \
		../../../qt/install/mkspecs/features/moc.prf \
		../../../qt/install/mkspecs/features/resources.prf \
		../../../qt/install/mkspecs/features/uic.prf \
		../../../qt/install/mkspecs/features/yacc.prf \
		../../../qt/install/mkspecs/features/lex.prf \
		../../../qt/install/mkspecs/features/include_source_dir.prf \
		ANPR_linux.pro
QMAKE_TARGET  = ANPR_linux
DESTDIR       = 
TARGET        = ANPR_linux

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: ANPR_linux.pro  ../../../qt/install/mkspecs/qws/linux-arm-gnueabi-g++/qmake.conf ../../../qt/install/mkspecs/common/gcc-base.conf \
		../../../qt/install/mkspecs/common/gcc-base-unix.conf \
		../../../qt/install/mkspecs/common/g++-base.conf \
		../../../qt/install/mkspecs/common/g++-unix.conf \
		../../../qt/install/mkspecs/common/unix.conf \
		../../../qt/install/mkspecs/common/linux.conf \
		../../../qt/install/mkspecs/common/qws.conf \
		../../../qt/install/mkspecs/qconfig.pri \
		../../../qt/install/mkspecs/features/qt_functions.prf \
		../../../qt/install/mkspecs/features/qt_config.prf \
		../../../qt/install/mkspecs/features/exclusive_builds.prf \
		../../../qt/install/mkspecs/features/default_pre.prf \
		../../../qt/install/mkspecs/features/release.prf \
		../../../qt/install/mkspecs/features/default_post.prf \
		../../../qt/install/mkspecs/features/warn_on.prf \
		../../../qt/install/mkspecs/features/qt.prf \
		../../../qt/install/mkspecs/features/unix/thread.prf \
		../../../qt/install/mkspecs/features/moc.prf \
		../../../qt/install/mkspecs/features/resources.prf \
		../../../qt/install/mkspecs/features/uic.prf \
		../../../qt/install/mkspecs/features/yacc.prf \
		../../../qt/install/mkspecs/features/lex.prf \
		../../../qt/install/mkspecs/features/include_source_dir.prf \
		/opt/zedboard/qt/install/lib/libQtGui.prl \
		/opt/zedboard/qt/install/lib/libQtNetwork.prl \
		/opt/zedboard/qt/install/lib/libQtCore.prl
	$(QMAKE) -o Makefile ANPR_linux.pro
../../../qt/install/mkspecs/common/gcc-base.conf:
../../../qt/install/mkspecs/common/gcc-base-unix.conf:
../../../qt/install/mkspecs/common/g++-base.conf:
../../../qt/install/mkspecs/common/g++-unix.conf:
../../../qt/install/mkspecs/common/unix.conf:
../../../qt/install/mkspecs/common/linux.conf:
../../../qt/install/mkspecs/common/qws.conf:
../../../qt/install/mkspecs/qconfig.pri:
../../../qt/install/mkspecs/features/qt_functions.prf:
../../../qt/install/mkspecs/features/qt_config.prf:
../../../qt/install/mkspecs/features/exclusive_builds.prf:
../../../qt/install/mkspecs/features/default_pre.prf:
../../../qt/install/mkspecs/features/release.prf:
../../../qt/install/mkspecs/features/default_post.prf:
../../../qt/install/mkspecs/features/warn_on.prf:
../../../qt/install/mkspecs/features/qt.prf:
../../../qt/install/mkspecs/features/unix/thread.prf:
../../../qt/install/mkspecs/features/moc.prf:
../../../qt/install/mkspecs/features/resources.prf:
../../../qt/install/mkspecs/features/uic.prf:
../../../qt/install/mkspecs/features/yacc.prf:
../../../qt/install/mkspecs/features/lex.prf:
../../../qt/install/mkspecs/features/include_source_dir.prf:
/opt/zedboard/qt/install/lib/libQtGui.prl:
/opt/zedboard/qt/install/lib/libQtNetwork.prl:
/opt/zedboard/qt/install/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile ANPR_linux.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/ANPR_linux1.0.0 || $(MKDIR) .tmp/ANPR_linux1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/ANPR_linux1.0.0/ && $(COPY_FILE) --parents common.h convert_mat_qimage.h DetectRegions.h mainwindow.h OCR.h Plate.h videodevice.h .tmp/ANPR_linux1.0.0/ && $(COPY_FILE) --parents convert_mat_qimage.cpp DetectRegions.cpp main.cpp mainwindow.cpp OCR.cpp Plate.cpp videodevice.cpp .tmp/ANPR_linux1.0.0/ && $(COPY_FILE) --parents mainwindow.ui .tmp/ANPR_linux1.0.0/ && (cd `dirname .tmp/ANPR_linux1.0.0` && $(TAR) ANPR_linux1.0.0.tar ANPR_linux1.0.0 && $(COMPRESS) ANPR_linux1.0.0.tar) && $(MOVE) `dirname .tmp/ANPR_linux1.0.0`/ANPR_linux1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/ANPR_linux1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_videodevice.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_videodevice.cpp
moc_mainwindow.cpp: common.h \
		videodevice.h \
		mainwindow.h
	/opt/zedboard/qt/install/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_videodevice.cpp: videodevice.h
	/opt/zedboard/qt/install/bin/moc $(DEFINES) $(INCPATH) videodevice.h -o moc_videodevice.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui
	/opt/zedboard/qt/install/bin/uic mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

convert_mat_qimage.o: convert_mat_qimage.cpp convert_mat_qimage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o convert_mat_qimage.o convert_mat_qimage.cpp

DetectRegions.o: DetectRegions.cpp DetectRegions.h \
		Plate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DetectRegions.o DetectRegions.cpp

main.o: main.cpp mainwindow.h \
		common.h \
		videodevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		common.h \
		videodevice.h \
		ui_mainwindow.h \
		convert_mat_qimage.h \
		DetectRegions.h \
		Plate.h \
		OCR.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

OCR.o: OCR.cpp OCR.h \
		Plate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o OCR.o OCR.cpp

Plate.o: Plate.cpp Plate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Plate.o Plate.cpp

videodevice.o: videodevice.cpp videodevice.h \
		common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o videodevice.o videodevice.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_videodevice.o: moc_videodevice.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_videodevice.o moc_videodevice.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

